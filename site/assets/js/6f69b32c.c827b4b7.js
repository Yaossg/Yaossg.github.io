"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[3728],{3905:(e,t,i)=>{i.d(t,{Zo:()=>p,kt:()=>u});var a=i(67294);function r(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function n(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,a)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?n(Object(i),!0).forEach((function(t){r(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):n(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function c(e,t){if(null==e)return{};var i,a,r=function(e,t){if(null==e)return{};var i,a,r={},n=Object.keys(e);for(a=0;a<n.length;a++)i=n[a],t.indexOf(i)>=0||(r[i]=e[i]);return r}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)i=n[a],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var l=a.createContext({}),s=function(e){var t=a.useContext(l),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},p=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var i=e.components,r=e.mdxType,n=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=s(i),u=r,h=d["".concat(l,".").concat(u)]||d[u]||m[u]||n;return i?a.createElement(h,o(o({ref:t},p),{},{components:i})):a.createElement(h,o({ref:t},p))}));function u(e,t){var i=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=i.length,o=new Array(n);o[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var s=2;s<n;s++)o[s]=i[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,i)}d.displayName="MDXCreateElement"},67624:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>n,metadata:()=>c,toc:()=>s});var a=i(87462),r=(i(67294),i(3905));const n={},o="Chapter 2 - Memory Hierarchy Design",c={unversionedId:"CAAQA/chapter2/index",id:"CAAQA/chapter2/index",title:"Chapter 2 - Memory Hierarchy Design",description:"Memory Architecture",source:"@site/docs/CAAQA/chapter2/index.md",sourceDirName:"CAAQA/chapter2",slug:"/CAAQA/chapter2/",permalink:"/site/docs/CAAQA/chapter2/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Chapter 1 - Fundamentals of Quantitative Design and Analysis",permalink:"/site/docs/CAAQA/chapter1/"},next:{title:"Chapter 3 - Instruction-Level Parallelism and Its Exploitation",permalink:"/site/docs/CAAQA/chapter3/"}},l={},s=[{value:"Memory Architecture",id:"memory-architecture",level:2},{value:"Six Basic Cache Optimization",id:"six-basic-cache-optimization",level:2},{value:"Ten Advanced Optimizations of Cache Performance",id:"ten-advanced-optimizations-of-cache-performance",level:2},{value:"Five Categories",id:"five-categories",level:3},{value:"Ten Optimizations",id:"ten-optimizations",level:3},{value:"Protection via Virtual Memory",id:"protection-via-virtual-memory",level:2},{value:"Protection via Virtual Machines",id:"protection-via-virtual-machines",level:2}],p={toc:s};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"chapter-2---memory-hierarchy-design"},"Chapter 2 - Memory Hierarchy Design"),(0,r.kt)("h2",{id:"memory-architecture"},"Memory Architecture"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image-20230914112956936",src:i(94934).Z,width:"896",height:"940"})),(0,r.kt)("h2",{id:"six-basic-cache-optimization"},"Six Basic Cache Optimization"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Larger block size to reduce miss rate"),(0,r.kt)("li",{parentName:"ol"},"Bigger caches to reduce miss rate"),(0,r.kt)("li",{parentName:"ol"},"Higher associativity to reduce miss rate"),(0,r.kt)("li",{parentName:"ol"},"Multilevel caches to reduce miss penalty"),(0,r.kt)("li",{parentName:"ol"},"Giving priority to read misses over writes to reduce miss penalty"),(0,r.kt)("li",{parentName:"ol"},"Avoiding address translation during indexing of the cache to reduce hit time")),(0,r.kt)("h2",{id:"ten-advanced-optimizations-of-cache-performance"},"Ten Advanced Optimizations of Cache Performance"),(0,r.kt)("h3",{id:"five-categories"},"Five Categories"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Reducing the hit time\u2014Small and simple first-level caches and way-prediction. Both techniques also generally decrease power consumption."),(0,r.kt)("li",{parentName:"ol"},"Increasing cache bandwidth\u2014Pipelined caches, multibanked caches, and non-blocking caches. These techniques have varying impacts on power consumption."),(0,r.kt)("li",{parentName:"ol"},"Reducing the miss penalty\u2014Critical word first and merging write buffers. These optimizations have little impact on power."),(0,r.kt)("li",{parentName:"ol"},"Reducing the miss rate\u2014Compiler optimizations. Obviously any improvement at compile time improves power consumption."),(0,r.kt)("li",{parentName:"ol"},"Reducing the miss penalty or miss rate via parallelism\u2014Hardware prefetching and compiler prefetching. These optimizations generally increase power consumption, primarily because of prefetched data that are unused.")),(0,r.kt)("h3",{id:"ten-optimizations"},"Ten Optimizations"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Small and Simple First-Level Caches to Reduce Hit Time and Power"),(0,r.kt)("li",{parentName:"ol"},"Way Prediction to Reduce Hit Time"),(0,r.kt)("li",{parentName:"ol"},"Pipelined Access and Multibanked Caches to Increase Bandwidth"),(0,r.kt)("li",{parentName:"ol"},"Nonblocking Caches to Increase Cache Bandwidth"),(0,r.kt)("li",{parentName:"ol"},"Critical Word First and Early Restart to Reduce Miss Penalty"),(0,r.kt)("li",{parentName:"ol"},"Merging Write Buffer to Reduce Miss Penalty"),(0,r.kt)("li",{parentName:"ol"},"Compiler Optimizations to Reduce Miss Rate"),(0,r.kt)("li",{parentName:"ol"},"Hardware Prefetching of Instructions and Data to Reduce Miss Penalty or Miss Rate"),(0,r.kt)("li",{parentName:"ol"},"Compiler-Controlled Prefetching to Reduce Miss Penalty or Miss Rate"),(0,r.kt)("li",{parentName:"ol"},"Using HBM to Extend the Memory Hierarchy")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image-20230914123059495",src:i(15734).Z,width:"965",height:"850"})),(0,r.kt)("h2",{id:"protection-via-virtual-memory"},"Protection via Virtual Memory"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image-20230914124816709",src:i(34363).Z,width:"823",height:"661"})),(0,r.kt)("h2",{id:"protection-via-virtual-machines"},"Protection via Virtual Machines"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image-20230914124852909",src:i(81472).Z,width:"852",height:"407"})))}m.isMDXComponent=!0},94934:(e,t,i)=>{i.d(t,{Z:()=>a});const a=i.p+"assets/images/image-20230914112956936-9f37d804cf3dae73030a2efbd978c330.png"},15734:(e,t,i)=>{i.d(t,{Z:()=>a});const a=i.p+"assets/images/image-20230914123059495-f9cfbb9bb852f5e21cfe45140b7b8af8.png"},34363:(e,t,i)=>{i.d(t,{Z:()=>a});const a=i.p+"assets/images/image-20230914124816709-10ab820236d95109cd810eec08c786c0.png"},81472:(e,t,i)=>{i.d(t,{Z:()=>a});const a=i.p+"assets/images/image-20230914124852909-efb950bad69db999a0c2db3869be1759.png"}}]);